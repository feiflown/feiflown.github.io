<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>java on fei&#39;s blog</title>
    <link>http://feiflown.github.io/categories/java/</link>
    <description>Recent content in java on fei&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>feiflown@gmail.com (fei)</managingEditor>
    <webMaster>feiflown@gmail.com (fei)</webMaster>
    <copyright>WTFPLv2</copyright>
    <lastBuildDate>Sat, 08 Apr 2023 17:00:12 +0800</lastBuildDate><atom:link href="http://feiflown.github.io/categories/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CompletableFuture&#43;ThreadPoolExecutor</title>
      <link>http://feiflown.github.io/post/completablefuture&#43;threadpoolexecutor/</link>
      <pubDate>Sat, 08 Apr 2023 17:00:12 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/completablefuture&#43;threadpoolexecutor/</guid>
      <description></description>
    </item>
    
    <item>
      <title>idea激活破解教程</title>
      <link>http://feiflown.github.io/post/idea%E6%BF%80%E6%B4%BB%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sat, 08 Apr 2023 17:00:12 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/idea%E6%BF%80%E6%B4%BB%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://img.quanxiaoha.com/quanxiaoha/168007807869793&#34; alt=&#34;IDEA 2023.1 破解激活教程&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;今天给大家分享一个 IDEA 2023.1 的激活破解教程，全文通过文字+图片的方式讲解，手把手教你如何激活破解 IDEA， 只需要几分钟即可搞定~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;申明：本教程 IntelliJ IDEA 破解补丁、激活码均收集于网络，请勿商用，仅供个人学习使用，如有侵权，请联系作者删除。若条件允许，希望大家购买正版 ！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;PS: 本教程最新更新时间: 2023年3月29日~&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>redisson获取锁</title>
      <link>http://feiflown.github.io/post/redisson%E8%8E%B7%E5%8F%96%E9%94%81/</link>
      <pubDate>Fri, 31 Mar 2023 21:16:55 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/redisson%E8%8E%B7%E5%8F%96%E9%94%81/</guid>
      <description>&lt;p&gt;策略模式优点：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>ThreadPoolExecutor</title>
      <link>http://feiflown.github.io/post/threadpoolexecutor/</link>
      <pubDate>Fri, 31 Mar 2023 21:16:55 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/threadpoolexecutor/</guid>
      <description>&lt;p&gt;策略模式优点：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>yml system配置</title>
      <link>http://feiflown.github.io/post/yml-system%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Fri, 31 Mar 2023 21:16:55 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/yml-system%E9%85%8D%E7%BD%AE/</guid>
      <description>&lt;p&gt;策略模式优点：&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>策略模式优化–结合工厂模式</title>
      <link>http://feiflown.github.io/post/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96%E7%BB%93%E5%90%88%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Fri, 31 Mar 2023 21:16:55 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F%E4%BC%98%E5%8C%96%E7%BB%93%E5%90%88%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F/</guid>
      <description>&lt;p&gt;策略模式优点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算法自由切换：高层模块传入哪个具体抽象类的实例就执行哪个&lt;/li&gt;
&lt;li&gt;具有良好的扩展性：扩展满足开闭原则&lt;/li&gt;
&lt;li&gt;避免使用多重条件判断&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;策略模式缺点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;所有具体策略角色都需要对高层模块暴露，即需要在高层模块中实例化具体策略角色，然后赋值给上下文角色类中的抽象角色引用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可能出现策略膨胀问题：例如比赛不是BO5，而是BO10000，那要打印所有结果的话，就会有非常多的具体策略类，这就是策略膨胀。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;针对这些策略模式的缺点，我们可以通过将策略模式与简单工厂模式结合使用来解决这些问题。整合之后的代码与上面的通用代码只有上下文角色类与高层模块类不同。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Session与Cookie</title>
      <link>http://feiflown.github.io/post/token%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95/</link>
      <pubDate>Tue, 03 Jan 2023 14:32:52 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/token%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95/</guid>
      <description>&lt;p&gt;Windows下查看文件MD5值&lt;/p&gt;
&lt;p&gt;token实现登录&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>排序算法</title>
      <link>http://feiflown.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 14 Sep 2022 15:10:07 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95/</guid>
      <description>&lt;p&gt;排序算法&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>登录鉴权-JWT实现方式</title>
      <link>http://feiflown.github.io/post/%E7%99%BB%E5%BD%95%E9%89%B4%E6%9D%83-jwt%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Sat, 05 Mar 2022 22:06:12 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/%E7%99%BB%E5%BD%95%E9%89%B4%E6%9D%83-jwt%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;p&gt;登录鉴权-JWT实现方式&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>idea快捷键</title>
      <link>http://feiflown.github.io/post/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Tue, 05 Oct 2021 20:00:11 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/idea%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>&lt;p&gt;idea快捷键&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PO、VO、DAO、BO、DTO、POJO</title>
      <link>http://feiflown.github.io/post/povodaobodtopojo/</link>
      <pubDate>Thu, 26 Nov 2020 22:14:49 +0800</pubDate>
      <author>feiflown@gmail.com (fei)</author>
      <guid>http://feiflown.github.io/post/povodaobodtopojo/</guid>
      <description>&lt;p&gt;PO、VO、DAO、BO、DTO、POJO&lt;/p&gt;
&lt;p&gt;能分清吗？&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
